# `allowedGithubOrgs` is a space-delimited string of GitHub organizations, to
# at least one of which any authenticating user *must* belong.
allowedGithubOrgs: ""

# `awsRegion` is the target deployment region and should match the region of the
# AWS auth session.
awsRegion: us-east-1

# `branding` is an arbitrary string which is used in the OAuth2 flow to provide
# a hint of customization, reduce confusion, nice human things.
branding: Not Overridden Branding Value For Fuzzbucket

# `defaultImageAlias` is the fallback value used server-side when creating
# instances that do not specify an image alias.
defaultImageAlias: ubuntu22

# `defaultInstanceTags` will be added to every instance
defaultInstanceTags: very%3Aserious:ok,hams:steamed

# `defaultInstanceType` is the fallback value used server-side when creating
# instances that do not specify an instance type.
defaultInstanceType: t3.small

# `defaultTtl` is the fallback value *in seconds* that is used server-side when
# creating instances that do not specify a TTL.
defaultTtl: '14400'

# :warning: `dynamodb` _must_ be defined here to be included in the "custom"
# values, as the `serverless` framework does not provide a way to merge sections
# by default.
dynamodb:
  start:
    migrate: true
  stages:
  - dev
  - prod
  - test

# `flaskSecretKey` is set as the Flask app's `secret_key` attribute for session
# security.
flaskSecretKey: not even trying to be secure here ok

# `imageAliasesTableName` _must_ be defined, as the `serverless`
# framework does not provide a way to nest value lookups.
imageAliasesTableName: fuzzbucket-${opt:stage, 'dev'}-image-aliases

# `logLevel` is used in the server-side logger specific to fuzzbucket
logLevel: info

# `memorySize` is passed directly in the serverless "provider" section
memorySize: 128

# `oauth` section contains `clientID` and `clientSecret` values which must be
# set to the values provided upon registering your GitHub OAuth2 app specific to
# your deployment of Fuzzbucket.
# See: https://developer.github.com/v3/guides/basics-of-authentication/#registering-your-app
oauth:
  clientID: ffffffffffffffffffff
  clientSecret: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

# `publicSubnetAvailabilityZone` is used as "AvailabilityZone" when defining the
# public subnet of the VPC resource used by instances managed by fuzzbucket.
publicSubnetAvailabilityZone: us-east-1a

# `publicSubnetCidrBlock` is used as "CidrBlock" when defining the public subnet
# of the VPC resource used by instances managed by fuzzbucket.
publicSubnetCidrBlock: 172.98.0.0/19

# `reapSchedule` is used in the "reap" function definition's
# "events[0].schedule" field and must be a valid CloudWatch event expression.
# See: https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents-expressions.html
reapSchedule: rate(10 minutes)

# `timeout` is passed directly to the serverless "provider" section
timeout: 30

# `usersTableName` _must_ be defined, as the `serverless`
# framework does not provide a way to nest value lookups.
usersTableName: fuzzbucket-${opt:stage, 'dev'}-users

# `vpcCidrBlock` is used as "CidrBlock" when defining the VPC resource used by
# instances managed by fuzzbucket.
vpcCidrBlock: 172.98.0.0/18

# `vpcTags` is used as "Tags" when defining the VPC resource used by instances
# managed by fuzzbucket.
vpcTags:
- Key: Name
  Value: fuzzbucket-${opt:stage, 'dev'}-vpc

# :warning: `wsgi` _must_ be defined here to be included in the "custom" values,
# as the `serverless` framework does not provide a way to merge sections by
# default.
wsgi:
  app: fuzzbucket.deferred_app
  packRequirements: false
