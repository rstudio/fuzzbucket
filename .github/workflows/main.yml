name: main
on:
  push:
    branches: [main]
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [main]
env:
  AWS_DEFAULT_REGION: us-east-1
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      releasable: ${{ toJson(steps.check_releasable.outputs.releasable) }}
      tarball_basename: ${{ toJson(steps.create_release_artifact.outputs.tarball_basename) }}
    steps:
    - uses: actions/checkout@v4
    - run: git fetch --prune --unshallow
    - uses: actions/setup-python@v5
    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - uses: extractions/setup-just@v2
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: ${{ runner.os }}-pip-
    - uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node18-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-node18-
    - run: pip install hatch
    - run: just deps
    - run: hatch run lint
    - run: hatch run test
      env:
        FUZZBUCKET_AUTH_PROVIDER: github-oauth
    - run: hatch run test
      env:
        FUZZBUCKET_AUTH_PROVIDER: oauth
        PYTEST_ADDOPTS: --cov-append
    - run: hatch run coverage report
    - run: hatch run is-releasable | tee -a "${GITHUB_OUTPUT}"
      id: check_releasable
    - run: hatch build
    - run: hatch run release-artifact | tee -a "${GITHUB_OUTPUT}"
      id: create_release_artifact
    - uses: actions/upload-artifact@v4
      with:
        name: tarball
        path: ${{ steps.create_release_artifact.outputs.tarball }}
  smoke:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        python: [3.8.x, 3.9.x, 3.10.x, 3.11.x, 3.12.x]
    steps:
    - uses: actions/checkout@v4
    - run: git fetch --prune --unshallow
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - uses: actions/download-artifact@v4
      id: download
      with:
        name: tarball
        path: dist
    - run: pip install -vvv ${{ steps.download.outputs.download-path }}/${{ fromJson(needs.build.outputs.tarball_basename) }}
    - run: fuzzbucket-client --version
    - run: fuzzbucket-client --help
  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/') && fromJson(needs.build.outputs.releasable)
    environment: production
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v4
    - run: git fetch --prune --unshallow
    - uses: actions/download-artifact@v4
      id: download
      with:
        name: tarball
        path: dist
    - uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.download.outputs.download-path }}/${{ fromJson(needs.build.outputs.tarball_basename) }}
    - uses: pypa/gh-action-pypi-publish@release/v1
