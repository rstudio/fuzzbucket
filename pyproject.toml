[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "fuzzbucket-client"
dynamic = ["version"]
description = "Command line client for fuzzbucket"
readme = "README.md"
license = "MIT"
license-files = { paths = ["LICENSE.md"] }
requires-python = ">=3.9, <4"
authors = [
    { name = "Posit Humans", email = "ptd-dev+fuzzbucket@posit.co" },
]
dependencies = []

[project.scripts]
fuzzbucket-client = "fuzzbucket_client.__main__:main"

[project.urls]
Homepage = "https://github.com/rstudio/fuzzbucket"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "fuzzbucket/__version__.py"

[tool.hatch.envs.default]
dependencies = [
  "black",
  "boto3",
  "boto3-stubs",
  "botocore-stubs",
  "coverage",
  "flask",  # lambda dependency
  "flask-dance",  # lambda dependency
  "ipython",
  "isort",
  "moto[ec2,dynamodb]",
  "mypy",
  "pytest",
  "pytest-cover",
  "pytest-mypy",
  "pyyaml",
  "sshpubkeys",
  "toml",
  "types-pyyaml",
  "urllib3 <2",
  "werkzeug",  # lambda dependency
]

[tool.hatch.envs.default.scripts]
clean = """\
rm -rf \
  ./.coverage \
  ./.mypy_cache \
  ./.pytest_cache \
  ./__pycache__ \
  ./build \
  ./coverage.xml \
  ./dist \
  ./fuzzbucket_client.egg-info \
  ./htmlcov
"""
lint = [
  "isort --check --diff {root}",
  "black --check --diff {root}",
  "pytest -m mypy --no-cov"
]
test = "pytest --cov-fail-under=90"
fmt = [
  "isort {root}",
  "black {root}"
]
is-releasable = '{root}/scripts/is_releasable.py "$(hatch version)"'
release-artifact = '{root}/scripts/release-artifact'
serve-htmlcov = "cd ./htmlcov && python -m http.server"
lint-config = '{root}/scripts/lint_config.py {args}'
routes = 'FLASK_APP=fuzzbucket.app flask routes {args}'

[tool.hatch.build.targets.sdist]
include = [
  "/fuzzbucket_client",
]

[tool.black]
extend-exclude = '''
__version__.py
'''

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "fuzzbucket/__version__.py",
  "fuzzbucket_client/__version__.py"
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
extend_skip = [".cache", ".serverless"]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
norecursedirs = ".venv node_modules .serverless build"
addopts = '''
  --cov fuzzbucket
  --cov fuzzbucket_client
  --cov tests
  --cov-report term
  --cov-report html
  --cov-report xml
  -vv
  --mypy
  --disable-warnings
'''
